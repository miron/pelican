<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>street.yoga - Vim</title><link href="https://street.yoga/" rel="alternate"></link><link href="https://street.yoga/feeds/vim.atom.xml" rel="self"></link><id>https://street.yoga/</id><updated>2011-06-30T00:00:00+02:00</updated><subtitle>Yoga &amp; Machines</subtitle><entry><title>Paste columns in vim</title><link href="https://street.yoga/Vim%20as%20Excel%20alternative.html" rel="alternate"></link><published>2011-06-30T00:00:00+02:00</published><updated>2011-06-30T00:00:00+02:00</updated><author><name>streetyogi</name></author><id>tag:street.yoga,2011-06-30:/Vim as Excel alternative.html</id><summary type="html">&lt;p&gt;Multi columns in Vim&lt;/p&gt;</summary><content type="html">&lt;p&gt;Finaly, after years of searching, i found an almost perfect solution.  &lt;/p&gt;
&lt;p&gt;I sometimes like to write lists in vim which have 2 columns, or sometimes you copy something from the web and want to have it in two columns.  &lt;/p&gt;
&lt;p&gt;First you have the text in one column, then you go to the first row you want to have in the second column.&lt;br&gt;
Then you enter visual blockmode with Ctrl-V, then you press $, as not all rows will be the same length.&lt;br&gt;
Then scroll down with j and select all items you want to have in the second column.&lt;br&gt;
Then yank with y, or delete with x, go to the first corner of the second row and paste with p.&lt;/p&gt;</content><category term="Vim"></category><category term="linux"></category><category term="terminal"></category><category term="vim"></category></entry><entry><title>Enable And Disable Spell-Checking In Vim</title><link href="https://street.yoga/enable-and-disable-spell-checking-in-vim.html" rel="alternate"></link><published>2007-09-24T00:00:00+02:00</published><updated>2007-09-24T00:00:00+02:00</updated><author><name>streetyogi</name></author><id>tag:street.yoga,2007-09-24:/enable-and-disable-spell-checking-in-vim.html</id><summary type="html">&lt;p&gt;Spellcheckers unite&lt;/p&gt;</summary><content type="html">&lt;p&gt;First you choose the language which you want to use:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;:setlocal spell spelllang=en_us&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;or &lt;/p&gt;
&lt;p&gt;&lt;code&gt;:setlocal spell spelllang=de_at&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;For the German spell files you have to:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;emerge vim-spell-de&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;You can disable spellchecking with:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;:set nospell&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;]s&lt;/code&gt; move to next misspelled word, &lt;code&gt;[s&lt;/code&gt; move to prev. misspelled word
&lt;code&gt;z=&lt;/code&gt; suggests correctly spelled words under cursor,
&lt;code&gt;1z=&lt;/code&gt; takes the first word from the suggestion list
&lt;code&gt;^Xs&lt;/code&gt; does the same in insert mode.
&lt;code&gt;:spellr&lt;/code&gt; repeats replacements done with &lt;code&gt;z=&lt;/code&gt; for all matches&lt;/p&gt;
&lt;p&gt;For more info about spellchecking in vim:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;:h spell&lt;/code&gt;&lt;/p&gt;</content><category term="Vim"></category><category term="terminal"></category><category term="vim"></category></entry><entry><title>Insert Current Date In Vim</title><link href="https://street.yoga/insert-current-date-in-vim.html" rel="alternate"></link><published>2007-08-27T00:00:00+02:00</published><updated>2007-08-27T00:00:00+02:00</updated><author><name>streetyogi</name></author><id>tag:street.yoga,2007-08-27:/insert-current-date-in-vim.html</id><summary type="html">&lt;p&gt;I don't know how to do that in vscode&lt;/p&gt;</summary><content type="html">&lt;p&gt;If you write a ToDo list or a schedule in vim, you probably want to insert the current date or the date after one week from now. 
Here is how to do it:  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;:r !date&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;or to add one week to the current Date:  &lt;/p&gt;
&lt;p&gt;&lt;code&gt;:r !date -d "today 1 week"&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;enjoy :)&lt;/p&gt;</content><category term="Vim"></category><category term="linux"></category><category term="vim"></category><category term="insert"></category><category term="date"></category></entry><entry><title>Append yanked and deleted lines to registers in vim</title><link href="https://street.yoga/append-yanked-and-deleted-lines-to-registers-in-vim.html" rel="alternate"></link><published>2007-07-13T00:00:00+02:00</published><updated>2007-07-13T00:00:00+02:00</updated><author><name>streetyogi</name></author><id>tag:street.yoga,2007-07-13:/append-yanked-and-deleted-lines-to-registers-in-vim.html</id><summary type="html">&lt;p&gt;Enigma was easier to crack than vim&lt;/p&gt;</summary><content type="html">&lt;p&gt;Man, this never has an ending, so you already yank some files like this into a register:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;"b3yy&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;"B3yy&lt;/code&gt; appends the next 3 lines into the b-register&lt;/p&gt;</content><category term="Vim"></category><category term="vim"></category><category term="append"></category><category term="register"></category></entry><entry><title>Vim commandline</title><link href="https://street.yoga/vim-commandline.html" rel="alternate"></link><published>2007-07-13T00:00:00+02:00</published><updated>2007-07-13T00:00:00+02:00</updated><author><name>streetyogi</name></author><id>tag:street.yoga,2007-07-13:/vim-commandline.html</id><summary type="html">&lt;p&gt;Even before exams no rest for the vicked&lt;/p&gt;</summary><content type="html">&lt;p&gt;Today i have my LPIC 101 exam, and while learning i tripped over this two examples:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vi +"set number" somefile.txt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;vi +/sometext somefile.txt&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The first one opens a file and numbers it and the second one opens a file and highlights the searchterm.&lt;/p&gt;</content><category term="Vim"></category><category term="terminal"></category><category term="vim"></category><category term="commandline"></category><category term="search"></category><category term="numbering"></category></entry><entry><title>Browsing the Rails API with elinks using rails.vim</title><link href="https://street.yoga/browsing-the-rails-api-with-elinks-using-railsvim.html" rel="alternate"></link><published>2007-06-29T00:00:00+02:00</published><updated>2007-06-29T00:00:00+02:00</updated><author><name>streetyogi</name></author><id>tag:street.yoga,2007-06-29:/browsing-the-rails-api-with-elinks-using-railsvim.html</id><summary type="html">&lt;p&gt;I'm using elinks to browse the Rails API&lt;/p&gt;</summary><content type="html">&lt;p&gt;Add this line to your .vimrc&lt;/p&gt;
&lt;p&gt;`command -bar -nargs=1 OpenURL :!elinks &lt;args&gt;&lt;/p&gt;</content><category term="Vim"></category><category term="rubyOnRails"></category><category term="vim"></category><category term="rails"></category><category term="elinks"></category></entry><entry><title>Map multiple piped commands in vim</title><link href="https://street.yoga/map-multiple-piped-commands-in-vim.html" rel="alternate"></link><published>2007-06-22T00:00:00+02:00</published><updated>2007-06-22T00:00:00+02:00</updated><author><name>streetyogi</name></author><id>tag:street.yoga,2007-06-22:/map-multiple-piped-commands-in-vim.html</id><summary type="html">&lt;p&gt;I seldom map, but I do map multiple commands in vim&lt;/p&gt;</summary><content type="html">&lt;p&gt;If you want to map multiple commands in vim do it like this:&lt;/p&gt;
&lt;p&gt;nmap &lt;F1&gt; :w|!ruby %&amp;gt;;CR&amp;gt;&lt;/p&gt;
&lt;p&gt;imap &lt;F1&gt; &lt;Esc&gt;:w|!ruby %&lt;CR&gt;&lt;/p&gt;
&lt;p&gt;This writes the actual file to disk and  evaluates it through the ruby interpreter when you hit the F1-key.&lt;/p&gt;
&lt;p&gt;Alternatively you can do a:&lt;/p&gt;
&lt;p&gt;:nmap &amp;lt;F1&amp;gt; :w|rubyf %&amp;lt;CR&amp;gt;   (no space after the %)&lt;/p&gt;
&lt;p&gt;:imap &amp;lt;F1&amp;gt; &amp;lt;Esc&amp;gt;:w|rubyf %&amp;lt;CR&amp;gt;&lt;/p&gt;
&lt;p&gt;which should be faster, condition is you have to build vim with ruby support,  but sometimes i get no results with this , vim gets crashed or does not respond anymore to me...&lt;/p&gt;
&lt;p&gt;This mappings work both in insert- and command-mode&lt;/p&gt;</content><category term="Vim"></category><category term="ruby"></category><category term="vim"></category><category term="map"></category><category term="pipe"></category><category term="multiple"></category></entry><entry><title>Some handy vim commands</title><link href="https://street.yoga/some-handy-vim-commands.html" rel="alternate"></link><published>2007-06-20T00:00:00+02:00</published><updated>2007-06-20T00:00:00+02:00</updated><author><name>streetyogi</name></author><id>tag:street.yoga,2007-06-20:/some-handy-vim-commands.html</id><summary type="html">&lt;p&gt;Years of practice, still no memorization&lt;/p&gt;</summary><content type="html">&lt;p&gt;I want to have them in one place so i write them down here:&lt;/p&gt;
&lt;p&gt;&lt;span style="background-color:#ddffdd;color:#000000;font-weight:bold;"&gt;&lt;tt&gt;:g/^#/d&lt;/tt&gt;&lt;/span&gt; Delete all lines that begins with #&lt;/p&gt;
&lt;p&gt;&lt;span style="background-color:#ddffdd;color:#000000;font-weight:bold;"&gt;&lt;tt&gt;:g/^$/d&lt;/tt&gt;&lt;/span&gt; Delete all lines that are empty and contain no tabs&lt;/p&gt;
&lt;p&gt;&lt;span style="background-color:#ddffdd;color:#000000;font-weight:bold;"&gt;&lt;tt&gt;:g/^\s*$/d&lt;/tt&gt;&lt;/span&gt; Delete all lines that are empty&lt;/p&gt;
&lt;p&gt;&lt;span style="background-color:#ddffdd;color:#000000;font-weight:bold;"&gt;&lt;tt&gt;:%s/$/{ctrl-V}{CR}/g&lt;/tt&gt;&lt;/span&gt; Inserts blank line between lines &lt;span style="background-color:#ddffdd;color:#000000;font-weight:bold;"&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;span style="background-color:#ddffdd;color:#000000;font-weight:bold;"&gt;&lt;tt&gt;:%s/{TAB}*$//&lt;/tt&gt;&lt;/span&gt; Strip tabs at end of line&lt;/p&gt;
&lt;p&gt;&lt;span style="background-color:#ddffdd;color:#000000;font-weight:bold;"&gt;&lt;tt&gt;:g/&amp;lt;pattern&amp;gt;/t$&lt;/tt&gt;&lt;/span&gt; Copy every line which matches pattern to the end of  the file&lt;/p&gt;
&lt;p&gt;&lt;span style="background-color:#ddffdd;color:#000000;font-weight:bold;"&gt;&lt;tt&gt;5&amp;gt;&amp;gt;&lt;/tt&gt;&lt;/span&gt; indent 5 lines from line where cursor stands, handy because you dont need to enter visual mode&lt;/p&gt;
&lt;p&gt;And yes, {ctrl-V},{CR} and {TAB} means you have to press it, not to type it.&lt;/p&gt;
&lt;p&gt;Credits go to &lt;a href="http://gentoo-wiki.com/HOWTO_VIM" title="vim howto" target="_blank"&gt;gentoo- wiki.com&lt;/a&gt;, &lt;a href="http://www.yolinux.com/TUTORIALS/LinuxTutorialAdvanced_vi.html" title="vim tips" target="_blank"&gt;yolinux.com&lt;/a&gt; and &lt;a href="http://www.int-x.org/doku.php?id=tipps:vimtipps" title="vim tips" target="_blank"&gt;www.int-x.org&lt;/a&gt;&lt;/p&gt;</content><category term="Vim"></category><category term="vim"></category><category term="handy"></category><category term="reference"></category></entry><entry><title>Switch case under cursor in vim</title><link href="https://street.yoga/switch-case-under-cursor-in-vim.html" rel="alternate"></link><published>2007-06-15T00:00:00+02:00</published><updated>2007-06-15T00:00:00+02:00</updated><author><name>streetyogi</name></author><id>tag:street.yoga,2007-06-15:/switch-case-under-cursor-in-vim.html</id><summary type="html">&lt;p&gt;As if I would find it here ;)&lt;/p&gt;</summary><content type="html">&lt;p&gt;I rarely need this but maybe it comes handy some day :)&lt;/p&gt;
&lt;p&gt;just pres the tilde ==&amp;gt;  ~&lt;/p&gt;</content><category term="Vim"></category><category term="vim"></category><category term="switch"></category><category term="case"></category></entry><entry><title>Pasting in vims insertmode</title><link href="https://street.yoga/pasting-in-vims-insertmode.html" rel="alternate"></link><published>2007-06-13T00:00:00+02:00</published><updated>2007-06-13T00:00:00+02:00</updated><author><name>streetyogi</name></author><id>tag:street.yoga,2007-06-13:/pasting-in-vims-insertmode.html</id><summary type="html">&lt;p&gt;What to do with that paste?&lt;/p&gt;</summary><content type="html">&lt;p&gt;Sometimes you are already in vims insert mode, yanked something and want to paste it, instead of leaving insert mode, pasting, and enter insert mode again, type CTRL-O, paste with p, and you get back to insert mode automatically. Works of course for all normal mode commands.&lt;/p&gt;</content><category term="Vim"></category><category term="vim"></category><category term="paste"></category><category term="insert"></category></entry><entry><title>Vim contest: shortest solution postgreSQL tab to array</title><link href="https://street.yoga/vim-contest-shortest-solution-postgresql-tab-to-array.html" rel="alternate"></link><published>2007-06-13T00:00:00+02:00</published><updated>2007-06-13T00:00:00+02:00</updated><author><name>streetyogi</name></author><id>tag:street.yoga,2007-06-13:/vim-contest-shortest-solution-postgresql-tab-to-array.html</id><summary type="html">&lt;p&gt;To all the Vim wizards out there&lt;/p&gt;</summary><content type="html">&lt;p&gt;Maybe some of you have realised that i became a little obsessed  in the last days  using vim.&lt;/p&gt;
&lt;p&gt;Inspired by this Blog &lt;a href="http://helmi-blebe.blogspot.com/2007/04/vim-tips-blockwise-selection-mode-and.html" title="fast table editing in vim" target="_blank"&gt;entry&lt;/a&gt; I want to start a contest.&lt;/p&gt;
&lt;p&gt;Who finds the fastest solution of editing a given postgre table and changing it into an given array ?&lt;/p&gt;
&lt;p&gt;What you can win ? Well, the satisfaction of being the only true vim-master of the world :)&lt;/p&gt;
&lt;p&gt;That said, here the general framework.&lt;/p&gt;
&lt;p&gt;First the table we use in our contest:&lt;/p&gt;
&lt;pre&gt;col1 | integer                     | not null
col2 | timestamp without time zone | not null
col3 | character varying(100)      |
col4 | numeric                     |
col5 | numeric                     |
col6 | integer                     |
col7 | integer                     |
col8 | numeric                     |
col9 | numeric                     |
col10 | character varying(100)     |
col11 | character varying          |
col12 | character varying(100)     | not null
col13 | character varying          |
col14 | character varying          |
col15 | numeric                    |
col16 | numeric                    |
col17 | numeric                    |
col18 | character varying          |
col19 | numeric                    |&lt;/pre&gt;
&lt;p&gt;There are no lines before or after this table, and no spaces before or after this table&lt;/p&gt;
&lt;p&gt;This table we want to alter into this:&lt;/p&gt;
&lt;pre&gt;$ary = array('col1', 'col2', 'col3', 'col4', 'col5', 'col6', 'col7','col8',
'col9','col10', 'col11', 'col12', 'col13', 'col14', 'col15', 'col16', 'col17',
'col18', 'col19');&lt;/pre&gt;
&lt;p&gt;The array has to begin at the left topmost corner too&lt;/p&gt;
&lt;p&gt;We start at the top left corner in normal mode&lt;/p&gt;
&lt;p&gt;textwidth is set to 78&lt;/p&gt;
&lt;p&gt;tabstop is set to 8&lt;/p&gt;
&lt;p&gt;shiftwidth is also set to 8&lt;/p&gt;
&lt;p&gt;all relevant settings i did not mention here shall not be altered from the default configuration&lt;/p&gt;
&lt;p&gt;only standard keymappings of vim 7.1 are allowed, no abbreviations&lt;/p&gt;
&lt;p&gt;So the best would be to start it like this: vim -u NONE&lt;/p&gt;
&lt;p&gt;The ending position of the cursor does not matter, as well as the mode in which you  are when you  finished&lt;/p&gt;
&lt;p&gt;Every keystroke will be counted, so when a shift- or ctrl-key has to be pressed, this counts as an extra keystroke&lt;/p&gt;
&lt;p&gt;I use a German keyboard so my keystrokes will differ from the English ones, of course, for those people with different keyboards, when someone with an English keyboard finds the fastest solution, the keystrokes of the other keyboards will be translated to the English one and vice versa :)&lt;/p&gt;
&lt;p&gt;As i am pretty sure there will be some  obscurities because of the endless possibilities of vim, they will be discussed and added to the framework.&lt;/p&gt;
&lt;p&gt;So let me begin with my first solution:&lt;/p&gt;
&lt;p&gt;&amp;lt;CTRL-V&amp;gt;GI'&amp;lt;Esc&amp;gt;qqelC',&amp;lt;Esc&amp;gt;+q18@qs);&amp;lt;Esc&amp;gt;ggi$ary = array(&amp;lt;Esc&amp;gt;VGq&lt;/p&gt;
&lt;p&gt;This makes a total of :&lt;/p&gt;
&lt;blockquote&gt; 57 keystrokes&lt;/blockquote&gt;
&lt;p&gt;on a German keyboard, this will be converted to the amount of keystrokes on an English keyboard, if needed. I'm very sure it takes less strokes on an English one.&lt;/p&gt;
&lt;p&gt;Lets see this test also as an benchmark for other editors, but if you use the mouse, every move of the arm counts as 1 keystroke, so when you grab for the mouse and click something, this counts as 2 keystrokes, not counting the clicks of course, if you move your arm after the click back to your keyboard again, this counts as another keystroke, if you click something else this move counts as another keystroke, if the icons are side by side then only the click is counted.&lt;/p&gt;
&lt;p&gt;We have our first winner, this is Matt's solution:&lt;/p&gt;
&lt;p&gt;i$ary = array(&amp;lt;Esc&amp;gt;lqqi'&amp;lt;Esc&amp;gt;f C',&amp;lt;Esc&amp;gt;+q99@qs);&amp;lt;Esc&amp;gt;vggJX&lt;/p&gt;
&lt;p&gt;Makes a total of:&lt;/p&gt;
&lt;blockquote&gt;53 keystrokes (converted to a German keyboard)&lt;/blockquote&gt;
&lt;p&gt;Actually the last X is from me, but i'm cocksure he would find that out for himself :)&lt;/p&gt;
&lt;p&gt;And the master is on the road again, here my improved version of Matts version:&lt;/p&gt;
&lt;p&gt;i$ary = array(&amp;lt;CTRL-O&amp;gt;qq'&amp;lt;Esc&amp;gt;f C',&amp;lt;Esc&amp;gt;+q99@qs);&amp;lt;Esc&amp;gt;vggJX&lt;/p&gt;
&lt;p&gt;Makes a total of:&lt;/p&gt;
&lt;blockquote&gt; 52 keystrokes&lt;/blockquote&gt;</content><category term="Vim"></category><category term="vim"></category><category term="pragmatic"></category><category term="efficient"></category><category term="editing"></category><category term="benchmark"></category><category term="fast"></category><category term="contest"></category></entry><entry><title>Change working directory from vim</title><link href="https://street.yoga/change-working-directory-from-vim.html" rel="alternate"></link><published>2007-06-11T00:00:00+02:00</published><updated>2007-06-11T00:00:00+02:00</updated><author><name>streetyogi</name></author><id>tag:street.yoga,2007-06-11:/change-working-directory-from-vim.html</id><summary type="html">&lt;p&gt;Is it an editor or lifestyle?&lt;/p&gt;</summary><content type="html">&lt;p&gt;To change the working directory in vim you have to type :cd or :cd! to force it, not :!cd as this does nothing to my understanding&lt;/p&gt;</content><category term="Vim"></category><category term="vim"></category><category term="cd"></category><category term="directory"></category></entry><entry><title>Compare two files in vim, already opened in split windows</title><link href="https://street.yoga/compare-two-files-in-vim-already-opened-in-split-windows.html" rel="alternate"></link><published>2007-06-11T00:00:00+02:00</published><updated>2007-06-11T00:00:00+02:00</updated><author><name>streetyogi</name></author><id>tag:street.yoga,2007-06-11:/compare-two-files-in-vim-already-opened-in-split-windows.html</id><summary type="html">&lt;p&gt;diff, diff , diff that thing&lt;/p&gt;</summary><content type="html">&lt;p&gt;Type diffthis in both windows to enter diffmode, voila :)&lt;/p&gt;</content><category term="Vim"></category><category term="vim"></category><category term="split"></category><category term="compare"></category></entry><entry><title>Fast search and replace in vim</title><link href="https://street.yoga/fast-search-and-replace-in-vim.html" rel="alternate"></link><published>2007-06-11T00:00:00+02:00</published><updated>2007-06-11T00:00:00+02:00</updated><author><name>streetyogi</name></author><id>tag:street.yoga,2007-06-11:/fast-search-and-replace-in-vim.html</id><summary type="html">&lt;p&gt;The fastest editor in the world&lt;/p&gt;</summary><content type="html">&lt;p&gt;Today a fast search and replace technique in vim,  I copy an example direct from the vimhelp:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;foo&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;CR&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="ss"&gt;&amp;quot;foo&amp;quot;&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;change&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;until&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;match&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;bar&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Esc&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;replacement&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="o"&gt;//&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;CR&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="k"&gt;go&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;to&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;start&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;next&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;match&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;change&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;until&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;of&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;match&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;beep&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Esc&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="n"&gt;type&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;another&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;replacement&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;span class="n"&gt;etc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="Vim"></category><category term="vim"></category><category term="search"></category><category term="replace"></category></entry><entry><title>Installing vimball-archives</title><link href="https://street.yoga/installing-vimball-archives.html" rel="alternate"></link><published>2007-06-11T00:00:00+02:00</published><updated>2007-06-11T00:00:00+02:00</updated><author><name>streetyogi</name></author><id>tag:street.yoga,2007-06-11:/installing-vimball-archives.html</id><summary type="html">&lt;p&gt;extend that thing&lt;/p&gt;</summary><content type="html">&lt;p&gt;Open the .vba file in vim, so that you can see the source and then type:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;:so %&lt;/code&gt;&lt;/p&gt;</content><category term="Vim"></category><category term="vim"></category><category term="vimball"></category><category term="archive"></category></entry><entry><title>Invalid char when starting scripts</title><link href="https://street.yoga/invalid-char-when-starting-scripts.html" rel="alternate"></link><published>2007-06-11T00:00:00+02:00</published><updated>2007-06-11T00:00:00+02:00</updated><author><name>streetyogi</name></author><id>tag:street.yoga,2007-06-11:/invalid-char-when-starting-scripts.html</id><summary type="html">&lt;p&gt;bomb or nobomb, that is here the question (it's nobomb)&lt;/p&gt;</summary><content type="html">&lt;p&gt;foobar.rb:1: Invalid char &lt;code&gt;\357' in expression
foobar.rb:1: Invalid char&lt;/code&gt;\273' in expression
foobar.rb:1: Invalid char `\277' in expression&lt;/p&gt;
&lt;p&gt;Your script gives you this error and and vim shows nothing ? Try to set :set nobomb and save the file.&lt;/p&gt;
&lt;p&gt;When you start vim in binarymode, vim -b foobar.rb, than you see the invalid chars&lt;/p&gt;</content><category term="Vim"></category><category term="ruby"></category><category term="unicode"></category><category term="vim"></category><category term="invalid"></category><category term="character"></category></entry><entry><title>Howto transpose two letters in vim</title><link href="https://street.yoga/howto-transpose-two-letters-in-vim.html" rel="alternate"></link><published>2007-06-10T00:00:00+02:00</published><updated>2007-06-10T00:00:00+02:00</updated><author><name>streetyogi</name></author><id>tag:street.yoga,2007-06-10:/howto-transpose-two-letters-in-vim.html</id><summary type="html">&lt;p&gt;hint, it sounds like an operating system that brought me to linux&lt;/p&gt;</summary><content type="html">&lt;p&gt;This is just a simple reminder, type xp.&lt;/p&gt;</content><category term="Vim"></category><category term="vim"></category><category term="transpose"></category><category term="letters"></category></entry><entry><title>Macros in Vim</title><link href="https://street.yoga/macros-in-vim.html" rel="alternate"></link><published>2007-06-06T00:00:00+02:00</published><updated>2007-06-06T00:00:00+02:00</updated><author><name>streetyogi</name></author><id>tag:street.yoga,2007-06-06:/macros-in-vim.html</id><summary type="html">&lt;p&gt;hit that record button&lt;/p&gt;</summary><content type="html">&lt;p&gt;Ever wondered what this recording means when you accidentally hit the q-key and then another key ?&lt;/p&gt;
&lt;p&gt;&lt;code&gt;q{0-9a-zA-Z"}&lt;/code&gt;  starts recording a macro&lt;/p&gt;
&lt;p&gt;&lt;code&gt;q&lt;/code&gt; stops recording the macro&lt;/p&gt;
&lt;p&gt;&lt;code&gt;@{0-9a-zA-Z"}&lt;/code&gt; starts the macro&lt;/p&gt;
&lt;p&gt;&lt;code&gt;@@&lt;/code&gt; repeats last used macro&lt;/p&gt;</content><category term="Vim"></category><category term="vim"></category><category term="macro"></category><category term="recording"></category></entry><entry><title>Automatically save Foldings in vim</title><link href="https://street.yoga/automatically-save-foldings-in-vim.html" rel="alternate"></link><published>2007-01-26T00:00:00+01:00</published><updated>2007-01-26T00:00:00+01:00</updated><author><name>streetyogi</name></author><id>tag:street.yoga,2007-01-26:/automatically-save-foldings-in-vim.html</id><summary type="html">&lt;p&gt;folding, the essence of life&lt;/p&gt;</summary><content type="html">&lt;p&gt;Normaly you have to type allways :mkview and :loadview to save your folds, so simply add this two lines to your ~/.vimrc:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://applications.linux.com/article.pl?sid=06/05/18/1915233&amp;amp;tid=13"&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt; au BufWinLeave * silent! mkview
au BufWinEnter * silent! loadview&lt;/blockquote&gt;
&lt;p&gt;Now, each time you close a file, its fold state will be saved and reloaded when you reopen the file in Vim.&lt;/p&gt;
&lt;p&gt;&lt;strike&gt;Edit:&lt;/strike&gt;&lt;/p&gt;
&lt;p&gt;&lt;strike&gt;When I open new empty files from the shell or from Vim (:new)&lt;/strike&gt;&lt;/p&gt;
&lt;p&gt;&lt;strike&gt;I get the error message:&lt;/strike&gt;&lt;/p&gt;
&lt;p&gt;&lt;strike&gt;Error detected while processing BufWinEnter Auto commands for "*":&lt;/strike&gt;&lt;/p&gt;
&lt;p&gt;&lt;strike&gt;E32: No file name&lt;/strike&gt;&lt;/p&gt;
&lt;p&gt;&lt;strike&gt;This also happens when  opening :help window and sourcing sessions with&lt;/strike&gt;&lt;/p&gt;
&lt;p&gt;&lt;strike&gt;the shell command "vim -S session.vim". Have to find a way to run automatic :loadview only for windows that actually have a filename&lt;/strike&gt;&lt;/p&gt;</content><category term="Vim"></category><category term="linux"></category><category term="vim"></category><category term="folding"></category><category term="save"></category></entry><entry><title>Copy and Paste from Web to Vim</title><link href="https://street.yoga/copy-and-paste-from-web-to-vim.html" rel="alternate"></link><published>2007-01-12T00:00:00+01:00</published><updated>2007-01-12T00:00:00+01:00</updated><author><name>streetyogi</name></author><id>tag:street.yoga,2007-01-12:/copy-and-paste-from-web-to-vim.html</id><summary type="html">&lt;p&gt;vim meets the web&lt;/p&gt;</summary><content type="html">&lt;p&gt;Normaly autoindent is enabled, so it looks horrible when you paste something from an webpage into vim.
So before you do this, type:&lt;/p&gt;
&lt;p&gt;&lt;em&gt;:set paste&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Then in insert mode you can paste as usual with Shift+Ins.&lt;/p&gt;
&lt;p&gt;Edit: Caution! This disables mapping in insert mode and in command-line mode and abbreviations !!&lt;/p&gt;
&lt;p&gt;So to disable it again type :set paste! or :set nopaste.&lt;/p&gt;
&lt;p&gt;Another method and much faster is to type:&lt;/p&gt;
&lt;p&gt;:a&lt;/p&gt;
&lt;p&gt;paste the code and hit CTRL-C.&lt;/p&gt;
&lt;p&gt;Hint: Hit enter before CTRL-C if you did not cut the last \n to not to miss the last line.&lt;/p&gt;
&lt;p&gt;What annoys me too sometimes is the auto-commenting of vim, you can disable it with:&lt;/p&gt;
&lt;p&gt;:set com=f://&lt;/p&gt;
&lt;p&gt;But this only works when you type it in command mode. To set it permanently, you have to write this in your ~/.vimrc :&lt;/p&gt;
&lt;p&gt;set fo-=r&lt;/p&gt;</content><category term="Vim"></category><category term="linux"></category><category term="terminal"></category><category term="vim"></category><category term="copy"></category><category term="paste"></category><category term="web"></category></entry><entry><title>Omni-completion (aka "Intelisense") in vim using tab-key</title><link href="https://street.yoga/omni-completion-aka-intelisense-in-vim-using-tab-key.html" rel="alternate"></link><published>2006-10-27T00:00:00+02:00</published><updated>2006-10-27T00:00:00+02:00</updated><author><name>streetyogi</name></author><id>tag:street.yoga,2006-10-27:/omni-completion-aka-intelisense-in-vim-using-tab-key.html</id><summary type="html">&lt;p&gt;vimscript is a scripting language, so it is possible to use vim to write scripts&lt;/p&gt;</summary><content type="html">&lt;p&gt;Just add this fine piece of code to your ~/.vimrc:&lt;/p&gt;
&lt;pre&gt;
 function! CleverTab()
           if pumvisible()
             return "\"
           endif
   if strpart( getline('.'), 0, col('.')-1 ) =~ '^s*$'
      return "\"
           elseif exists('&amp;amp;omnifunc') &amp;amp;&amp;amp; &amp;amp;omnifunc != ''
              return "\"
           else
              return "\"
          endif
endfunction
inoremap  =CleverTab()&lt;/pre&gt;
&lt;pre&gt;&lt;/pre&gt;
&lt;p&gt;Edit:
Found a site which describes quite well how to enable the built in omnicompletion using ^X^O &lt;a href="http://amix.dk/blog/viewEntry/19021" title="omnicompletion in vim" target="_blank"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;^X^F completes filenames and directories.&lt;/p&gt;
&lt;p&gt;Some other completion methods:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://blog.rosejn.net/articles/2006/02/28/snippetmagic-0-02" title="another textmate snippets in vim" target="_blank"&gt;SnippetMagic:&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Works for my but the arrow keys  are not correctly mapped so use better&lt;/p&gt;
&lt;p&gt;&lt;a href="http://vim.sourceforge.net/scripts/script.php?script_id=1318" title="textmates snippets for vim" target="_blank"&gt;snippetsEmu:&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;witch worked out of the box for me, just create  ~/.vim/after/ftplugin, open the vimball, source it with :so and use it with your tab-key.&lt;/p&gt;</content><category term="Vim"></category><category term="code"></category><category term="vim"></category><category term="completion"></category><category term="tab"></category></entry><entry><title>Use vim instead of mcedit in midnight commander</title><link href="https://street.yoga/use-vim-instead-of-mcedit-in-midnight-commander.html" rel="alternate"></link><published>2006-10-22T00:00:00+02:00</published><updated>2006-10-22T00:00:00+02:00</updated><author><name>streetyogi</name></author><id>tag:street.yoga,2006-10-22:/use-vim-instead-of-mcedit-in-midnight-commander.html</id><summary type="html">&lt;p&gt;vim should be a plugin to everything&lt;/p&gt;</summary><content type="html">&lt;p&gt;Man how long i searched for this shit&lt;/p&gt;
&lt;p&gt;Under options/configuration unset "use internal edIt"&lt;/p&gt;</content><category term="Vim"></category><category term="vim"></category><category term="mc"></category><category term="mcedit"></category></entry><entry><title>supercollider under linux</title><link href="https://street.yoga/supercollider-under-linux.html" rel="alternate"></link><published>2006-10-05T00:00:00+02:00</published><updated>2006-10-05T00:00:00+02:00</updated><author><name>streetyogi</name></author><id>tag:street.yoga,2006-10-05:/supercollider-under-linux.html</id><summary type="html">&lt;p&gt;there is a vimscript for that&lt;/p&gt;</summary><content type="html">&lt;p&gt;Just compiled supercollider and get the error:&lt;/p&gt;
&lt;pre&gt;&lt;em&gt;sclang: error while loading shared libraries: libscsynth.so: cannot
&lt;/em&gt;&lt;em&gt; open shared object file: No such file or directory
&lt;/em&gt;&lt;/pre&gt;
&lt;p&gt;my break from linux was too long, so i forgot to add /usr/local/lib to /etc/ld.so.conf and run ldconfig as root.&lt;/p&gt;
&lt;p&gt;Found this supercollider interaction script for vim:&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.neisis.net/~alex/scvim/" title="supercollider interaction for vim" target="_blank"&gt; http://www.neisis.net/~alex/scvim/&lt;/a&gt;&lt;/p&gt;</content><category term="Vim"></category><category term="audio"></category><category term="linux"></category><category term="supercollider"></category><category term="error"></category></entry></feed>