<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>street.yoga - Ruby</title><link href="http://127.0.0.1:8000/" rel="alternate"></link><link href="http://127.0.0.1:8000/feeds/ruby.atom.xml" rel="self"></link><id>http://127.0.0.1:8000/</id><updated>2007-06-19T00:00:00+02:00</updated><subtitle>Yoga &amp; Machines</subtitle><entry><title>Error when installing instiki with RubyGems</title><link href="http://127.0.0.1:8000/error-when-installing-instiki-with-rubygems.html" rel="alternate"></link><published>2007-06-19T00:00:00+02:00</published><updated>2007-06-19T00:00:00+02:00</updated><author><name>streetyogi</name></author><id>tag:127.0.0.1,2007-06-19:/error-when-installing-instiki-with-rubygems.html</id><summary type="html">&lt;p&gt;Errors, errors, love them&lt;/p&gt;</summary><content type="html">&lt;p&gt;clean_logger.rb:13:in `remove_const': constant Logger::Format not defined (NameError)&lt;/p&gt;
&lt;p&gt;change from this:&lt;/p&gt;
&lt;p&gt;remove_const "Format"&lt;/p&gt;
&lt;p&gt;to this:&lt;/p&gt;
&lt;pre&gt;
remove_const "Format" if const_defined? "Format"&lt;/pre&gt;
&lt;p&gt;because the newer version of logger.rb does not include the line:&lt;/p&gt;
&lt;p&gt;Format = "%s, [%s#%d] %5s -- %s: %s\n"&lt;/p&gt;
&lt;p&gt;Edit:&lt;/p&gt;
&lt;p&gt;The instikiversion in rubygems is so outdated, just download latest version from  http://www.instiki.org/ which works fine.&lt;/p&gt;</content><category term="Ruby"></category><category term="ruby"></category><category term="instiki"></category><category term="error"></category></entry><entry><title>Arrays</title><link href="http://127.0.0.1:8000/arrays.html" rel="alternate"></link><published>2006-09-18T00:00:00+02:00</published><updated>2006-09-18T00:00:00+02:00</updated><author><name>streetyogi</name></author><id>tag:127.0.0.1,2006-09-18:/arrays.html</id><summary type="html">&lt;p&gt;A short introduction to arrays&lt;/p&gt;</summary><content type="html">&lt;p&gt;To shortcut this:&lt;/p&gt;
&lt;p&gt;a = ['apple', 'banana', 'peaches']&lt;/p&gt;
&lt;p&gt;i use this construct:&lt;/p&gt;
&lt;p&gt;a = %w{ apple banana peaches }&lt;/p&gt;</content><category term="Ruby"></category><category term="code"></category><category term="ruby"></category><category term="array"></category></entry><entry><title>The Object ARGF and his methods</title><link href="http://127.0.0.1:8000/the-object-argf-and-his-methods.html" rel="alternate"></link><published>2006-09-18T00:00:00+02:00</published><updated>2006-09-18T00:00:00+02:00</updated><author><name>streetyogi</name></author><id>tag:127.0.0.1,2006-09-18:/the-object-argf-and-his-methods.html</id><summary type="html">&lt;p&gt;ruby, ruby, ruby, ah-ah-ah-ah-ah-ah&lt;/p&gt;</summary><content type="html">&lt;p&gt;Today i worked my way through the pickaxe book and triped over this fine example:&lt;/p&gt;
&lt;p&gt;There is mentioned that you can abbreviate&lt;/p&gt;
&lt;p&gt;ARGF.each {|line| print line if line =~ /Ruby/ }&lt;/p&gt;
&lt;p&gt;to something like:&lt;/p&gt;
&lt;p&gt;print ARGF.grep(/Ruby/)&lt;/p&gt;
&lt;p&gt;So i tried that out in irb and to my surprise the behavior was not the same, ARGF.grep did not print anything. Fortunately a nice guy on #ruby-lang gave me a nice explanation, which goes far beyond my expectations.
1.) Irb has stdin and therefore has weird behavior.
2.) grep collects all its results into an array so it won't return until the file    (stdin) is closed.
3.) After hitting Ctr-D a possibly match gets printed.
4.) each prints immediately the result
5.) To have the same behavior from grep use:&lt;/p&gt;
&lt;p&gt;ARGF.grep(/Ruby/) { |s| print s }&lt;/p&gt;
&lt;p&gt;no intermediate array is then created, resp. it does create an array but with the results of the block rather than the strings.&lt;/p&gt;
&lt;p&gt;Thanks goes to LoganCapaldo for this impressing explanation.&lt;/p&gt;
&lt;p&gt;Some more differences between irb and script:&lt;/p&gt;
&lt;p&gt;def foo&lt;/p&gt;
&lt;p&gt;end&lt;/p&gt;
&lt;p&gt;p Object.private_methodsÂ  -&amp;gt; normaly foo is here included, not so in irb, as irb starts as public, so you have to type private to have the same behavior&lt;/p&gt;</content><category term="Ruby"></category><category term="code"></category><category term="ruby"></category><category term="syntax"></category><category term="object"></category><category term="coding"></category></entry><entry><title>Tab completion in irb</title><link href="http://127.0.0.1:8000/tab-completion-in-irb.html" rel="alternate"></link><published>2006-09-15T00:00:00+02:00</published><updated>2006-09-15T00:00:00+02:00</updated><author><name>streetyogi</name></author><id>tag:127.0.0.1,2006-09-15:/tab-completion-in-irb.html</id><summary type="html">&lt;p&gt;i don't want to type if i don't need to&lt;/p&gt;</summary><content type="html">&lt;p&gt;Just want to memorize.
irb --readline -r irb/completion
Now i can tabcomplete methods. (But this disables Filecompletion)&lt;/p&gt;
&lt;p&gt;To make it permanent add this to your .irbrc:&lt;/p&gt;
&lt;p&gt;require 'irb/completion'&lt;/p&gt;</content><category term="Ruby"></category><category term="ruby"></category><category term="completion"></category><category term="irb"></category></entry><entry><title>Mistakes in Agile Web Programming with Ruby on Rails</title><link href="http://127.0.0.1:8000/Some%20mistakes%20I%20found%20so%20far%20in%20the%20first%20edition.html" rel="alternate"></link><published>2006-09-14T00:00:00+02:00</published><updated>2006-09-14T00:00:00+02:00</updated><author><name>streetyogi</name></author><id>tag:127.0.0.1,2006-09-14:/Some mistakes I found so far in the first edition.html</id><summary type="html">&lt;p&gt;to err is human&lt;/p&gt;</summary><content type="html">&lt;p&gt;Enclosed are snippets from Agile Web Programming with Ruby on Rails.&lt;/p&gt;
&lt;p&gt;File 65:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="sr"&gt;%r{^http:.+\.(gif|jpg|png)$}i&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;changed to &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="sr"&gt;%r{\.(gif|jpg|png)$}i&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now i can save the pictures in the projects/images folder as suposed in the book and not somewhere at the internet.&lt;/p&gt;
&lt;p&gt;File 67: &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ss"&gt;:confirm&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Are you sure?&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;%&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;changed to &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ss"&gt;:confirm&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Are you sure?&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; 
&lt;span class="ss"&gt;:post&lt;/span&gt; &lt;span class="o"&gt;=&amp;gt;&lt;/span&gt; &lt;span class="kp"&gt;true&lt;/span&gt; &lt;span class="o"&gt;%&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now i can delete the products too.&lt;/p&gt;</content><category term="Ruby"></category><category term="code"></category><category term="ruby"></category><category term="rubyOnRails"></category><category term="rails"></category></entry></feed>