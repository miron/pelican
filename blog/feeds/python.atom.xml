<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>street.yoga - Python</title><link href="http://127.0.0.1:8000/" rel="alternate"></link><link href="http://127.0.0.1:8000/feeds/python.atom.xml" rel="self"></link><id>http://127.0.0.1:8000/</id><updated>2022-06-24T00:00:00+02:00</updated><subtitle>Yoga &amp; Machines</subtitle><entry><title>From Jekyl to Pelican</title><link href="http://127.0.0.1:8000/Byebye%20Ruby,%20Hello%20Python.html" rel="alternate"></link><published>2022-06-24T00:00:00+02:00</published><updated>2022-06-24T00:00:00+02:00</updated><author><name>streetyogi</name></author><id>tag:127.0.0.1,2022-06-24:/Byebye Ruby, Hello Python.html</id><summary type="html">&lt;p&gt;Some Python a day, keeps the Doctor away&lt;/p&gt;</summary><content type="html">&lt;p&gt;A total revamp of my moddest homepage. I'm going from the github pages provided Jekyll static site generator to &lt;a href="https://github.com/getpelican/pelican"&gt;Pelican&lt;/a&gt;.&lt;br&gt;
It is a lot of work, as I have to change metadata and formating of ancient articles I wrote over the years and decided to bring back.&lt;br&gt;
Those date back to &lt;a href="https://blogger.com"&gt;blogger&lt;/a&gt;, &lt;a href="https://wordpress.com"&gt;wordpress&lt;/a&gt;, and even a short time of hosting at a former company I worked for. It didn't last forever but was free :) &lt;br&gt;
Now I can use my Python skills to extend the blog, before it was Ruby, which I also liked but don't have the time anymore to learn both.   &lt;/p&gt;</content><category term="Python"></category><category term="ssg"></category></entry><entry><title>Python on Static Websites</title><link href="http://127.0.0.1:8000/Matplotlib%20Twin%20Axes.html" rel="alternate"></link><published>2022-06-24T00:00:00+02:00</published><updated>2022-06-24T00:00:00+02:00</updated><author><name>streetyogi</name></author><id>tag:127.0.0.1,2022-06-24:/Matplotlib Twin Axes.html</id><summary type="html">&lt;p&gt;Howto create beautiful plots with pyscript and matplotlib&lt;/p&gt;</summary><content type="html">&lt;p&gt;Stil playing around with &lt;a href="https://github.com/pyscript/pyscript/blob/main/docs/tutorials/getting-started.md"&gt;PyScript&lt;/a&gt;.&lt;br&gt;
Didn't understand what the fuzz was about, Python in the browser is everywere after all.  &lt;br&gt;
But the fact that you can embed it everywere is huge, no setting up servers, no search for sites that host your Python code, just a static website is enough :) &lt;br&gt;
Additionally to almost all the modules from the &lt;a href="https://docs.python.org/3/library/"&gt;Python Standard Library&lt;/a&gt; you can use over hundred external modules from &lt;a href="https://pyodide.org/en/stable/usage/packages-in-pyodide.html"&gt;Pyodide&lt;/a&gt;.   &lt;br&gt;
Below is shown a simple graph in &lt;a href="https://matplotlib.org/"&gt;matplotlib&lt;/a&gt; that compares treasury bond rates from 2 different years.&lt;/p&gt;
&lt;p&gt;&lt;html&gt;
    &lt;head&gt;
      &lt;link rel="stylesheet" href="https://pyscript.net/alpha/pyscript.css" /&gt;
      &lt;script defer src="https://pyscript.net/alpha/pyscript.js"&gt;&lt;/script&gt;
      &lt;link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" crossorigin="anonymous"&gt;
    &lt;/head&gt;&lt;/p&gt;
&lt;body&gt;
    &lt;py-env&gt;
      - matplotlib
    &lt;/py-env&gt;

    &lt;py-script&gt;
        import matplotlib.pyplot as plt
    labels = ['1 Mo','3 Mo','6 Mo','1 Yr','2 Yr','3 Yr','5 Yr','7 Yr','10 Yr','20 Yr','30 Yr']
    july16_2007 =[4.75,4.98,5.08,5.01,4.89,4.89,4.95,4.99,5.05,5.21,5.14]
    july16_2020 = [0.12,0.11,0.13,0.14,0.16,0.17,0.28,0.46,0.62,1.09,1.31]
    fig, ax1 = plt.subplots()
    ax1.plot(labels,july16_2007, color='blue', label="july16_2007")
    ax1.set_ylabel("2007", color='blue')
    ax1.spines['left'].set_color('blue')
    ax1.spines['left'].set_linewidth(4)
    for label in ax1.get_yticklabels():
        label.set_color('blue')
    ax2 = ax1.twinx()
    ax2.plot(labels,july16_2020, color='red', label='july16_2020')
    ax2.set_ylabel("2020", color='red')
    ax2.spines['right'].set_color('red')
    ax2.spines['right'].set_linewidth(4)
    for label in ax2.get_yticklabels():
        label.set_color('red')
    plt
    &lt;/py-script&gt;
  &lt;/body&gt;
&lt;p&gt;&lt;/html&gt;&lt;/p&gt;</content><category term="Python"></category><category term="pyscript"></category></entry><entry><title>Python in the Browser</title><link href="http://127.0.0.1:8000/Pythonic%20Lotto%20Numbers.html" rel="alternate"></link><published>2022-06-21T00:00:00+02:00</published><updated>2022-06-21T00:00:00+02:00</updated><author><name>streetyogi</name></author><id>tag:127.0.0.1,2022-06-21:/Pythonic Lotto Numbers.html</id><summary type="html">&lt;p&gt;Sampled ranges inside the browser, how cool is that?&lt;/p&gt;</summary><content type="html">&lt;p&gt;Python code embedded in html which samples random Austrian lottery numbers.&lt;br&gt;
Also prints the date and writes into labeled elements.&lt;br&gt;
Bear in mind that this is just a simple static website :)&lt;br&gt;
Uses &lt;a href="https://github.com/pyscript/pyscript/blob/main/docs/tutorials/getting-started.md"&gt;PyScript&lt;/a&gt;. Check it out for some examples.  &lt;/p&gt;
&lt;p&gt;&lt;html&gt;
    &lt;head&gt;
      &lt;link rel="stylesheet" href="https://pyscript.net/alpha/pyscript.css" /&gt;
      &lt;script defer src="https://pyscript.net/alpha/pyscript.js"&gt;&lt;/script&gt;
      &lt;link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" crossorigin="anonymous"&gt;
    &lt;/head&gt;&lt;/p&gt;
&lt;body&gt;
    &lt;b&gt;&lt;p&gt;Today is &lt;u&gt;&lt;label id='today'&gt;&lt;/label&gt;&lt;/u&gt;&lt;/p&gt;&lt;/b&gt;
    &lt;br&gt;
    &lt;div id="lotto" class="alert alert-primary"&gt;&lt;/div&gt;
    &lt;py-script&gt;
      import datetime as dt
      from random import sample
      pyscript.write('today', dt.date.today().strftime('%A %B %d, %Y'))
      pyscript.write('lotto', f'{sample(range(1,46), 6)}')
    &lt;/py-script&gt;
  &lt;/body&gt;
&lt;p&gt;&lt;/html&gt;&lt;/p&gt;</content><category term="Python"></category><category term="pyscript"></category></entry></feed>