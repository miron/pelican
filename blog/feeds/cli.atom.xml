<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>street.yoga - CLI</title><link href="http://127.0.0.1:8000/" rel="alternate"></link><link href="http://127.0.0.1:8000/feeds/cli.atom.xml" rel="self"></link><id>http://127.0.0.1:8000/</id><updated>2020-10-01T00:00:00+02:00</updated><subtitle>Yoga &amp; Machines</subtitle><entry><title>Grepable Goodness</title><link href="http://127.0.0.1:8000/All%20the%20oneliners%20you%20want.html" rel="alternate"></link><published>2020-10-01T00:00:00+02:00</published><updated>2020-10-01T00:00:00+02:00</updated><author><name>streetyogi</name></author><id>tag:127.0.0.1,2020-10-01:/All the oneliners you want.html</id><summary type="html">&lt;p&gt;grep through it, hit enter, enjoy&lt;/p&gt;</summary><content type="html">&lt;div class="gist"&gt;
    &lt;script src='https://gist.github.com/4997128.js'&gt;&lt;/script&gt;
    &lt;noscript&gt;
        &lt;pre&gt;&lt;code&gt;# grepable with inline comments.
# create alias: gh alias set cheat 'gist view 4997128'
# gh cheat | grep cheat -C 3, shows 3 lines before and after, 
# Windows Powershell: gh cheat | Select-String cheat

bind -p | grep -v '^#\|self-insert\|^$' #list bash vim keybindings 
shopt #shell options
bind -P #print keybindings  
bash -x #print shellscript before executing, execute commands from file
help #brief summaries of builtin commands
fc #open last commandline in editor
kill -HUP $(ps -A -ostat,ppid | grep -e '[zZ]'| awk '{ print $2  }') #kill zombie processes
echo $0 #show if login shell or not, login shell has -bash  
rm ./-somefileordir #remove file with hyphen
cd ./-somefileordir #change into dir with hyphen
type #type of command  
type -a program #show path to all versions of program  
export HISTTIMEFORMAT="%h/%d - %H:%M:%S " #shows date in historyfile 
printf \t \n ... #formated print with tab and newline
grep -A 2 -B 3 foo README.txt # 2 lines before, 3 lines after
grep -C 3 foo README.txt # 3 lines before and after
xprop |grep WM_CLASS #get x11 window classname  
echo "scale=2; x+y" | bc #calculations from cli, 2 decimals
echo "x*y" | bc -l #calculations from cli   
sudo -s #stay in directory when sudo   
man std::--&gt;tab #c++ manpages    
base64 #encode and decode using base64 representation
jq -r 'map(.Value | @base64d)' &lt; file.json #decode base64 string of Value object
pdftotext my.pdf - | grep 'pattern' #grep through pdfs without writing txt file
yes foo &gt; bar.txt #repeat some text (default is y) infinetly and save it to a file
strings #find the printable strings in a object, or other binary, file 
mkfifo --mode=0666 /tmp/namedPipe #load SQL commands ...  
gzip --stdout -d file.gz &gt; /tmp/namedPipe #from gzipped file ...
  LOAD DATA INFILE '/tmp/namedPipe' INTO TABLE tableName; #into database ...
java -version #java version 
javac -version #java compiler version
ant -version #java make tool version 
mvn #java project management tool 
rcs  #revision control system
tee  #pipe to STDOUT and  file 
cal #display calendar   
tidy #html parser  
fmt #format text (TEX) 
textutil #convert document-files   
xpath #xml parser 
xmllint  #xml parser
locate -r "^\(.*/\)*header\.inc\.php$" #exact match  
sqlite3 #sqlite cli interface ...
  .databases #view databases ...
  .open FILENAME #connect to database file ... 
  .tables #show tabes ...
  .mode html #switch to html mode ...
  .once FILENAME.html #query output to file ...
  SELECT * FROM TABLE; # write content from table to FILENAME.html... 
  .quit #quit sqlite database ...
project.cj add overtone dep  #overtone audio live coding
lein deps # ...
gibber #audiovisual live coding framework in javascript 
xclip -sel clip &lt; ~/.ssh/id_rsa.pub #copy from file to clipboard
sudo service start ssh start # start ssh daemon on WSL client and remotely connect to it
apt install &lt;packet&gt; # install gh in Kali, download deb: https://github.com/cli/cli/releases/latest&lt;/code&gt;&lt;/pre&gt;
    &lt;/noscript&gt;
&lt;/div&gt;</content><category term="CLI"></category><category term="gcc"></category><category term="gh"></category><category term="git"></category><category term="powershell"></category></entry><entry><title>clear scrollback buffer in terminal</title><link href="http://127.0.0.1:8000/clear-scrollback-buffer-in-terminal.html" rel="alternate"></link><published>2011-06-06T00:00:00+02:00</published><updated>2011-06-06T00:00:00+02:00</updated><author><name>streetyogi</name></author><id>tag:127.0.0.1,2011-06-06:/clear-scrollback-buffer-in-terminal.html</id><summary type="html">&lt;p&gt;After all the work, clear it&lt;/p&gt;</summary><content type="html">&lt;p&gt;clear and ^L:   &lt;/p&gt;
&lt;p&gt;clears window and sets cursor at beginning of window.  &lt;/p&gt;
&lt;p&gt;reset or âŒ˜K on Mac OSX:  &lt;/p&gt;
&lt;p&gt;clears whole scrollback buffer  &lt;/p&gt;</content><category term="CLI"></category><category term="linux"></category><category term="terminal"></category></entry><entry><title>BiLE-weigh.pl: sort: open failed: +1: No such file or directory</title><link href="http://127.0.0.1:8000/Bile%20sorting%20with%20perl.html" rel="alternate"></link><published>2007-05-27T00:00:00+02:00</published><updated>2007-05-27T00:00:00+02:00</updated><author><name>streetyogi</name></author><id>tag:127.0.0.1,2007-05-27:/Bile sorting with perl.html</id><summary type="html">&lt;p&gt;Command line voodoo&lt;/p&gt;</summary><content type="html">&lt;p&gt;Simply change this line from:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="sb"&gt;`&lt;/span&gt;cat temp &lt;span class="p"&gt;|&lt;/span&gt; sort -r -t &lt;span class="s2"&gt;&amp;quot;:&amp;quot;&lt;/span&gt; +1 -n &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;gt&lt;span class="p"&gt;;&lt;/span&gt; @ARGV&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;.sorted&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;to:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="sb"&gt;`&lt;/span&gt;cat temp &lt;span class="p"&gt;|&lt;/span&gt; sort -r -t &lt;span class="s2"&gt;&amp;quot;:&amp;quot;&lt;/span&gt;  -k &lt;span class="m"&gt;1&lt;/span&gt; -n &lt;span class="p"&gt;&amp;amp;&lt;/span&gt;gt&lt;span class="p"&gt;;&lt;/span&gt; @ARGV&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;.sorted&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="CLI"></category><category term="code"></category><category term="terminal"></category><category term="sort"></category><category term="perl"></category><category term="bile"></category></entry></feed>